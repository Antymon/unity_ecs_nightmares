//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    static readonly RoundFinishedComponent roundFinishedComponent = new RoundFinishedComponent();

    public bool isRoundFinished {
        get { return HasComponent(GameComponentsLookup.RoundFinished); }
        set {
            if (value != isRoundFinished) {
                if (value) {
                    AddComponent(GameComponentsLookup.RoundFinished, roundFinishedComponent);
                } else {
                    RemoveComponent(GameComponentsLookup.RoundFinished);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRoundFinished;

    public static Entitas.IMatcher<GameEntity> RoundFinished {
        get {
            if (_matcherRoundFinished == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RoundFinished);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRoundFinished = matcher;
            }

            return _matcherRoundFinished;
        }
    }
}
