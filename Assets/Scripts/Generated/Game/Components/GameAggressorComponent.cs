//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AggressorComponent aggressor { get { return (AggressorComponent)GetComponent(GameComponentsLookup.Aggressor); } }
    public bool hasAggressor { get { return HasComponent(GameComponentsLookup.Aggressor); } }

    public void AddAggressor(Entitas.Entity newTarget) {
        var index = GameComponentsLookup.Aggressor;
        var component = CreateComponent<AggressorComponent>(index);
        component.target = newTarget;
        AddComponent(index, component);
    }

    public void ReplaceAggressor(Entitas.Entity newTarget) {
        var index = GameComponentsLookup.Aggressor;
        var component = CreateComponent<AggressorComponent>(index);
        component.target = newTarget;
        ReplaceComponent(index, component);
    }

    public void RemoveAggressor() {
        RemoveComponent(GameComponentsLookup.Aggressor);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAggressor;

    public static Entitas.IMatcher<GameEntity> Aggressor {
        get {
            if (_matcherAggressor == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Aggressor);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAggressor = matcher;
            }

            return _matcherAggressor;
        }
    }
}
