//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity scoreCounterEntity { get { return GetGroup(GameMatcher.ScoreCounter).GetSingleEntity(); } }
    public ScoreCounterComponent scoreCounter { get { return scoreCounterEntity.scoreCounter; } }
    public bool hasScoreCounter { get { return scoreCounterEntity != null; } }

    public GameEntity SetScoreCounter(int newScore) {
        if (hasScoreCounter) {
            throw new Entitas.EntitasException("Could not set ScoreCounter!\n" + this + " already has an entity with ScoreCounterComponent!",
                "You should check if the context already has a scoreCounterEntity before setting it or use context.ReplaceScoreCounter().");
        }
        var entity = CreateEntity();
        entity.AddScoreCounter(newScore);
        return entity;
    }

    public void ReplaceScoreCounter(int newScore) {
        var entity = scoreCounterEntity;
        if (entity == null) {
            entity = SetScoreCounter(newScore);
        } else {
            entity.ReplaceScoreCounter(newScore);
        }
    }

    public void RemoveScoreCounter() {
        scoreCounterEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ScoreCounterComponent scoreCounter { get { return (ScoreCounterComponent)GetComponent(GameComponentsLookup.ScoreCounter); } }
    public bool hasScoreCounter { get { return HasComponent(GameComponentsLookup.ScoreCounter); } }

    public void AddScoreCounter(int newScore) {
        var index = GameComponentsLookup.ScoreCounter;
        var component = CreateComponent<ScoreCounterComponent>(index);
        component.score = newScore;
        AddComponent(index, component);
    }

    public void ReplaceScoreCounter(int newScore) {
        var index = GameComponentsLookup.ScoreCounter;
        var component = CreateComponent<ScoreCounterComponent>(index);
        component.score = newScore;
        ReplaceComponent(index, component);
    }

    public void RemoveScoreCounter() {
        RemoveComponent(GameComponentsLookup.ScoreCounter);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherScoreCounter;

    public static Entitas.IMatcher<GameEntity> ScoreCounter {
        get {
            if (_matcherScoreCounter == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ScoreCounter);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherScoreCounter = matcher;
            }

            return _matcherScoreCounter;
        }
    }
}
